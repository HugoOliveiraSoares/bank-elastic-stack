version: '3.8'

services:

  lb:
    build: infra/lb
    ports:
      - "3005:3005"
    networks:
      - backend

  web:
    build: frontend/web
    ports:
      - "3000:3000"    
    networks:
      - frontend
      - backend

  income:
    build: backend/income
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/nubank-income
    ports:
      - "8080"    
    deploy:
      replicas: 2
    networks:
      - backend

  wallet:
    build: backend/wallet
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/nubank-wallet
    ports:
      - "8080"
    deploy:
      replicas: 3
    networks:
      - backend

  account:
    build: backend/account
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/nubank-account
    ports:
      - "8083:8080"
    networks:
      - backend

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      # Persist data
      - mongo_data:/data/db
    networks:
      - backend

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9090:8080"
    environment:
      URLS: "[
            { url: 'income.json', name: 'Income'},
            { url: 'wallet.json', name: 'Wallet'},
            { url: 'account.json', name: 'Account'},
           ]"
    depends_on:
      account:
        condition: service_healthy
      wallet:
        condition: service_healthy
      income:
        condition: service_healthy
    command: |
      sh -c "wget http://income:8080/v3/api-docs -O /usr/share/nginx/html/income.json &&
             wget http://wallet:8080/v3/api-docs -O /usr/share/nginx/html/wallet.json &&
             wget http://account:8080/v3/api-docs -O /usr/share/nginx/html/account.json &&
             sed -i 's/income:8080/localhost:3005/g' /usr/share/nginx/html/income.json &&
             sed -i 's/wallet:8080/localhost:3005/g' /usr/share/nginx/html/wallet.json &&
             sed -i 's/account:8080/localhost:3005/g' /usr/share/nginx/html/account.json &&
             /usr/share/nginx/run.sh"
    networks:
      - backend

volumes:
  mongo_data:

networks: 
    frontend:
      driver: bridge
      ipam:
        config:
          - subnet: 172.168.57.0/24
    backend:
      driver: bridge
      ipam:
        config:
          - subnet: 172.168.58.0/24
